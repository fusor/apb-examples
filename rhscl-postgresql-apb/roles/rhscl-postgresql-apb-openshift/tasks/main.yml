- name: create namespace
  openshift_v1_project:
    name: '{{ namespace }}'
  when: state == 'present'

- name: set service state to {{ state }}
  k8s_v1_service:
    name: postgresql
    namespace: '{{ namespace }}'
    labels:
      app: rhscl-postgresql-apb
      service: postgresql
    selector:
      app: rhscl-postgresql-apb
      service: postgresql
    ports:
    - name: port-5432
      port: 5432
      protocol: TCP
      target_port: 5432
    state: "{{ state }}"
  register: postgres_service

- name: scale deployment down
  openshift_v1_deployment_config:
    name: postgresql
    namespace: '{{ namespace }}'
    replicas: 0
    state: present
    selector:
      app: rhscl-postgresql-apb
      service: postgresql
  when: state == 'absent'

- include: dev.yml
  when: plan == "dev"

- include: prod.yml
  when: plan == "prod"

- name: delete replication controller
  k8s_v1_replication_controller:
    name: postgresql-1
    namespace: '{{ namespace }}'
    state: absent
  when: state == 'absent'

- name: Wait for postgres to come up
  wait_for:
    port: 5432
    host: "{{ postgres_service.service.spec.cluster_ip }}"
    timeout: 300
  when: state == 'present'

- name: encode bind credentials
  shell: 'echo "{\"POSTGRESQL_HOST\": \"postgresql\", \"POSTGRESQL_PORT\": \"5432\", \"POSTGRESQL_USER\": \"{{ postgresql_user }}\", \"POSTGRESQL_PASSWORD\": \"{{ postgresql_password }}\", \"POSTGRESQL_DATABASE\": \"{{ postgresql_database }}\"}" | base64 -w 0'
  register: encoded_bind_credentials
  when: state == 'present'

- copy:
    content: "{{ encoded_bind_credentials.stdout }}"
    dest: /var/tmp/bind-creds
