- set_fact: 
    generated_user: "{{ lookup('password', '/tmp/gen_user chars=ascii_letters,digits length=8') }}"
    generated_password: "{{ lookup('password', '/tmp/gen_pass chars=ascii_letters,digits') }}"

- name: ensure database is created
  postgresql_db:
    name: "{{ _apb_provision_creds.POSTGRESQL_DATABASE }}"
    port: "{{ _apb_provision_creds.POSTGRESQL_PORT }}"
    login_host: "{{ _apb_provision_creds.POSTGRESQL_HOST }}"
    login_user: "{{ _apb_provision_creds.POSTGRESQL_USER }}"
    login_password: "{{ _apb_provision_creds.POSTGRESQL_PASSWORD }}"

- name: create database user
  postgresql_user:
    db: "{{ _apb_provision_creds.POSTGRESQL_DATABASE }}"
    name: "{{ generated_user }}"
    password: "{{ generated_password }}"
    port: "{{ _apb_provision_creds.POSTGRESQL_PORT }}"
    login_host: "{{ _apb_provision_creds.POSTGRESQL_HOST }}"
    login_user: "{{ _apb_provision_creds.POSTGRESQL_USER }}"
    login_password: "{{ _apb_provision_creds.POSTGRESQL_PASSWORD }}"
    encrypted: yes

- name: grant owner privillages on database
  postgresql_privs:
    db: "{{ _apb_provision_creds.POSTGRESQL_DATABASE }}"
    port: "{{ _apb_provision_creds.POSTGRESQL_PORT }}"
    role: "{{ generated_user }}"
    login_host: "{{ _apb_provision_creds.POSTGRESQL_HOST }}"
    login_user: "{{ _apb_provision_creds.POSTGRESQL_USER }}"
    login_password: "{{ _apb_provision_creds.POSTGRESQL_PASSWORD }}"
    type: schema 
    objs: todo_app
    privs: ALL

- name: encode bind credentials
  asb_encode_binding: 
    fields: 
      POSTGRESQL_HOST: "{{ _apb_provision_creds.POSTGRESQL_HOST }}"
      POSTGRESQL_PORT: "{{ _apb_provision_creds.POSTGRESQL_PORT }}" 
      POSTGRESQL_USER: "{{ generated_user }}"
      POSTGRESQL_PASSWORD: "{{ generated_password }}"
      POSTGRESQL_DATABASE: "{{ _apb_provision_creds.POSTGRESQL_DATABASE }}"
